{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","x","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kMAEaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE3BC,EAF2B,KAiB7C,OACI,mCACE,sBAAMC,SAVO,SAACC,GAChBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACzCN,EAAc,MAKhB,SACE,uBACQO,KAAK,OACLC,MAAST,EACTU,SAlBS,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,eCNlBG,EAAc,SAAC,GAAqB,EAAnBC,GAAoB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,S,uBCLHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAUF,GAD5C,sDAEDG,MAAMR,GAFL,cAEdS,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATtB,kBAcbY,GAda,4CAAH,sDCKRK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAXAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAACC,GACHH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAIrB,CAACb,IAEGc,EDfyBK,CAAanB,GAAjCU,EAJuB,EAI5BJ,KAAcO,EAJc,EAIdA,QAMrB,OACI,qCACI,qBAAIjB,UAAU,0CAAd,cAA0DI,KAC1D,sBAAKJ,UAAU,YAAf,UACEiB,EAAU,mBAAGjB,UAAU,oCAAb,wBAAiE,KAIzE,6BAEQc,EAAOF,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAAiCA,GAAbA,EAAIhB,gBEpBvC2B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAU9B,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWb,KAAK,SAACU,GAAD,OAER,cAAC,EAAD,CAAiBlB,SAAUkB,GAAbA,QAZlC,Q,MCbRI,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5e840c00.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue,setInputValue ] = useState('');\r\n\r\n\r\n    const handleInputChange= (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e) =>{\r\n        e.preventDefault();\r\n        //console.log('Submit Hecho')\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue,  ...cats ] );\r\n            setInputValue('');//clean input\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n          <form onSubmit= {handleSubmit}>\r\n            <input\r\n                    type=\"text\"\r\n                    value= { inputValue }\r\n                    onChange = { handleInputChange }\r\n            />      \r\n          </form>      \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce \">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n export const getGifs = async ( category ) =>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&api_key=PfOZ2EEtHZCROTY8MQOJTJId24X9uBTd`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n    //console.log(gifs);\r\n    //setImages(gifs);\r\n    return gifs;\r\n}    ","import React, { useState ,useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport {getGifs} from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    //const [count,setCount] = useState(0);\r\n    const {data:images , loading} = useFetchGifs(category);\r\n\r\n\r\n   \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__bounce \"> {category}</h3>\r\n            <div className=\"card-grid\">\r\n            { loading ? <p className=\"animate__animated animate__flash \">Loading...</p>: null }    \r\n                \r\n                \r\n                \r\n                <ol>\r\n                    {\r\n                        images.map( (img)=> (\r\n                            <GifGridItem key = {img.id}  {...img} />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>        \r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n//Get All Data and set this information inside Hooks\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((x)=>{\r\n                setState({\r\n                    data:x,\r\n                    loading:false\r\n                });\r\n            });\r\n            \r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n\r\n   /*const handleAdd= ()=>{\r\n        setCategories( x => [...x, 'HunterXHunter'])\r\n    };*/\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (x)=>\r\n                        ( \r\n                            <GifGrid key={x} category={x}  />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>-\r\n        </>\r\n    )\r\n\r\n    AddCategory.prototype = {\r\n        setCategories : PropTypes.func.isRequired\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}